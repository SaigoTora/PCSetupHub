@using PCSetupHub.Web.ViewModels

@model SearchComponentViewModel

@{
	<link rel="stylesheet" href="~/css/modal.css" />

	int resultsCount = Model.TotalItems;
}

<div class="d-flex align-items-center justify-content-between">
	@if (resultsCount == 0)
	{
		<div class="search-result-count">
			No results found
		</div>
	}
	else if (resultsCount == 1)
	{
		<div class="search-result-count">
			Found 1 result
		</div>
	}
	else
	{
		<div class="page-result-count">
			@if (Model.TotalPages > 1)
			{
				@:Page @Model.Page of @Model.TotalPages
			}
		</div>

		<div class="search-result-count">
			Found @resultsCount results
		</div>
	}
</div>

@if (Model.Components != null && Model.Components.Count > 0)
{
	<table class="mb-5 table-responsive w-100 search-components-table">
		@for (int i = 0; i < Model.Components.Count; i++)
		{
			<tr>
				<td class="p-2"><span class="user-select-none">@(i + 1)</span></td>
				<td class="p-2">
					<span id=@($"openModal-{Model.Components[i].GetType().Name}-{Model.Components[i].Id}") class="pc-component-name" translate="no">
						@Model.Components[i].DisplayName
					</span>
					@await Html.PartialAsync("PcComponents/_ComponentModalPartial", Model.Components[i])
				</td>
				<td>
					<form asp-controller="@Model.ControllerName" asp-action="Select" asp-route-pcConfigurationId="@Model.PcConfigurationId" asp-route-currentComponentId="@Model.CurrentComponentId" asp-route-componentId="@Model.Components[i].Id" method="post">
						@if (Model.Components[i].Id != Model.CurrentComponentId && (Model.SelectedComponentIds != null && !Model.SelectedComponentIds.Any(id => id == Model.Components[i].Id)))
						{
							<button class="select-component-button" type="submit">Select</button>
						}
						else
						{
							<button class="select-component-button" type="submit" disabled>Selected</button>
						}
					</form>
				</td>
			</tr>
		}
	</table>
}

<div class="d-flex justify-content-center">
	@await Html.PartialAsync("_PageNavigator", Model)
</div>